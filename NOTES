Темы:
* live-build (lb) общая теория
* live-build (lb) конфигурация
* Структура проекта
* Как собирают образа в Debian


--- live-build (lb)
`live-build` — это инструмент, используемый для создания Live-образов в Debian.

Live-образ — это версия операционной системы, которая загружается прямо с
носителя (например, USB-флешки или DVD) без необходимости установки на жесткий
диск. Это позволяет пользователям протестировать систему, выполнить
восстановление или диагностику, а также использовать её в качестве портативной
операционной системы. Live-образы полезны для демонстраций и тестирования, так
как изменения в системе не сохраняются после перезагрузки, если не использовать
специальные методы для сохранения данных.

Большинство Live-образов, включая те, которые создаются с помощью `live-build`,
предоставляют возможность установить операционную систему на жесткий диск.

Когда вы загружаетесь с Live-образа, обычно вам предлагается опция "Установить",
которая запускает установщик. Это позволяет вам протестировать операционную
систему без изменений в текущей системе, а затем, если она вам подходит,
установить её на ваш компьютер. Установочный процесс с Live-образа обычно очень
похож на стандартный установочный процесс для дистрибутива.


--- live-build (lb) конфигурация
$ /usr/bin/lb config -d bookworm --debian-installer live \
  --debian-installer-distribution bookworm \
  --archive-areas "main contrib non-free non-free-firmware" \
  --debootstrap-options "--variant=minbase"

Эта команда настраивает окружение для создания живого образа (live image) Debian
с помощью инструмента `live-build`. Краткий разбор:

`-d bookworm`: Указывает, что целью является версия Debian с кодовым именем bookworm.

`--debian-installer live`: Включает установщик Debian в живой образ.

`--debian-installer-distribution bookworm`: Указывает, что установщик должен
использовать дистрибуцию bookworm.

`--archive-areas "main non-free-firmware"`: Определяет, какие архивные секции
пакетов будут включены (основные и несвободные прошивки) в `/etc/apt/sources.list`.

`--debootstrap-options "--variant=minbase"`: Использует debootstrap для создания
минимальной базовой системы.


--- Структура проекта
После запуска конфигурации в проекте появятся файлы, разбор:

Временные файлы и каталоги (логи, промежуточные результаты и т.д), необходимые
для сборки образа:
- (d) .build

Содержит автоматически сгенерированные файлы конфигурации. Эти файлы, такие как
`auto/config`, могут использоваться для повторного выполнения конфигурации
`live-build` с теми же параметрами без необходимости каждый раз вводить их
вручную:
- (d) auto

Эта директория предназначена для хранения пользовательских скриптов, которые
могут быть выполнены в различных точках процесса сборки:
- (d) local/bin

Используется для хранения конфигурационных файлов и настроек, которые
определяют, как будет собран живой образ (Live CD/USB) с помощью `lb`:
- (d) config

Конфигурация для APT, например, файлы предпочтений, источники пакетов,
приоритеты APT и т.д:
- (d) apt

Персональные репозитории, зеркала или просто наборы deb-пакетов, которые можно
использовать без обращения к внешним репозиториям:
- (d) archives

Конфигурации для загрузчиков, таких как GRUB:
- (d) bootloaders

Конфигурация Debian установщика, если он включен в образ:
- (d) debian-installer

Скрипты, которые выполняются на различных этапах сборки:
- (d) hooks

Хуки в этой директории выполняются в live-системе, то есть после того, как
система загружена в live-режиме. Это может быть полезно для настройки, которая
должна применяться только в live-режиме, и не требуется в установленной системе.
  - (d) live

Хуки в этой директории выполняются во время сборки образа, чаще всего в
chroot-среде. Это значит, что они влияют на систему, которая будет упакована
в образ, и их изменения будут присутствовать как в live-системе, так и в
установленной системе, если образ будет использоваться для установки.
  - (d) normal

Последовательность выполнения хуков:
Можно использовать числовые префиксы в именах файлов хуков, чтобы задать порядок
их выполнения. Например, `0010-setup.hook.chroot`, `0020-install-packages.hook.chroot`,
и т.д. Если несколько хуков имеют одинаковые числовые префиксы, они будут
выполнены в алфавитном порядке их имен.

Дополнительные файлы, которые нужно включить в образ. Разбиты на подкатегории:
- (d) includes

Списки пакетов, которые нужно установить в образ. Например, `live.list.chroot`
содержит пакеты для живой системы:
- (d) package-lists

Директорий для добавления локальных deb-пакетов, которые должны быть
установлены:
- (d) packages

Файлы preseed для автоматической настройки Debian установщика:
- (d) preseed

Настройки и файлы для корневой файловой системы:
- (d) rootfs

Настройки, связанные с финальным бинарным образом, например, параметры
загрузчика:
- (f) binary

Параметры и скрипты, используемые на начальном этапе создания базовой системы:
- (f) bootstrap

Настройки и скрипты, которые применяются в окружении chroot при сборке:
- (f) chroot

Общие настройки для всех этапов сборки:
- (f) common

Исходные файлы конфигурации для создания исходного кода образа:
- (f) source


--- Как собирают образа в Debian
Например, образ `debian-live-12.9.0-amd64-xfce.iso` с
https://cdimage.debian.org/debian-cd/current-live/amd64/iso-hybrid/

Видно, что автор сборки использует сценарий `rebuild.sh` в
https://salsa.debian.org/live-team/live-build

$ git clone https://salsa.debian.org/live-team/live-build
$ cd test
$ ./rebuild.sh --configuration xfce --debian-version bookworm
В текущей директории будет начата сборка ISO образа.
